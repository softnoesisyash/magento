require.config({"config": {
        "jsbuild":{"Magepow_AjaxWishlist/js/action/customer-authentication-popup.js":"\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/modal',\n    'Magento_Customer/js/customer-data',\n    'mage/storage',\n    'mage/translate',\n    'mage/mage',\n    'jquery/ui'\n], function ($, modal, customerData, storage, $t) {\n    'use strict';\n\n    $.widget('ajaxwishlist.customerAuthenticationPopup', {\n        options: {\n            login: '#customer-popup-login',\n            prevLogin: 'a.towishlist'\n        },\n         _create: function () {\n            var self = this,\n                loginPopup = $(self.options.login),\n                body =  $('body');\n\n            // Show the login form in a popup when clicking on the sign in text\n            body.on('click', self.options.prevLogin, function() {\n                var authentication_options = {\n                    type: 'popup',\n                    responsive: true,\n                    innerScroll: true,\n                    buttons: false,\n                    modalClass : 'customer-popup-ajaxwishlist',\n                    closed: function(){\n                       $('.customer-popup-ajaxwishlist ').remove();\n                       body.find('.modals-overlay').css('z-index', '899');\n                    }                  \n                };\n\n                modal(authentication_options, loginPopup);\n                loginPopup.removeClass('_disabled');\n                loginPopup.modal('openModal');\n                return false;\n            });\n\n            this._ajaxSubmit();\n        },\n\n        _ajaxSubmit: function() {\n            var self = this,\n                form = this.element.find('form'),\n                inputElement = form.find('input');\n\n            inputElement.keyup(function (e) {\n                self.element.find('.messages').html('');\n            });\n\n            form.submit(function (e) {\n                if (form.validation('isValid')) {\n                    if (form.hasClass('form-create-account')) {\n                        $.ajax({\n                            url: $(e.target).attr('action'),\n                            data: $(e.target).serialize(),\n                            showLoader: true,\n                            type: 'POST',\n                            dataType: 'json',\n                            success: function (response) {\n                                self._showResponse(response, form.find('input[name=\"redirect_url\"]').val());\n                            },\n                            error: function() {\n                                self._showFailingMessage();\n                            }\n                        });\n                    } else {\n                        var submitData = {},\n                            formDataArray = $(e.target).serializeArray();\n                        formDataArray.forEach(function (entry) {\n                            submitData[entry.name] = entry.value;\n                        });\n                        $('body').loader().loader('show');\n                        storage.post(\n                            $(e.target).attr('action'),\n                            JSON.stringify(submitData)\n                        ).done(function (response) {\n                            $('body').loader().loader('hide');\n                            self._showResponse(response, form.find('input[name=\"redirect_url\"]').val());\n                        }).fail(function () {\n                            $('body').loader().loader('hide');\n                            self._showFailingMessage();\n                        });\n                    }\n                }\n                return false;\n            });\n        },\n\n        /**\n         * Display messages on the screen\n         * @private\n         */\n        _displayMessages: function(className, message) {\n            $('<div class=\"message '+className+'\"><div>'+message+'</div></div>').appendTo(this.element.find('.messages'));\n        },\n\n        /**\n         * Showing response results\n         * @private\n         * @param {Object} response\n         * @param {String} locationHref\n         */\n        _showResponse: function(response, locationHref) {\n            var self = this,\n                timeout = 800;\n            this.element.find('.messages').html('');\n            if (response.errors) {\n                this._displayMessages('message-error error', response.message);\n            } else {\n                this._displayMessages('message-success success', response.message);\n            }\n            this.element.find('.messages .message').show();\n            setTimeout(function() {\n                if (!response.errors) {\n                    self.element.modal('closeModal');\n                    window.location.href = locationHref;\n                }\n            }, timeout);\n        },\n\n        /**\n         * Show the failing message\n         * @private\n         */\n        _showFailingMessage: function() {\n            this.element.find('.messages').html('');\n            this._displayMessages('message-error error', $t('An error occurred, please try again later.'));\n            this.element.find('.messages .message').show();\n        }\n    });\n\n    return $.ajaxwishlist.customerAuthenticationPopup;\n});\n"}
}});
