require.config({"config": {
        "jsbuild":{"Magedelight_ScheduleShipping/js/tableleftfixer.js":"(function ($) {\r\n\r\n    $.fn.tableHeadFixer = function (param) {\r\n\r\n        return this.each(function () {\r\n            table.call(this);\r\n        });\r\n\r\n        function table() {\r\n\r\n            {\r\n                var defaults = {\r\n                    left: 0,\r\n                    'z-index': 0\r\n                };\r\n\r\n                var settings = $.extend({}, defaults, param);\r\n\r\n                settings.table = this;\r\n                settings.parent = $(settings.table).parent();\r\n                setParent();\r\n\r\n\r\n\r\n\r\n\r\n                if (settings.left > 0)\r\n                    fixLeft();\r\n\r\n\r\n\r\n                setCorner();\r\n\r\n                $(settings.parent).trigger(\"scroll\");\r\n\r\n                $(window).resize(function () {\r\n                    $(settings.parent).trigger(\"scroll\");\r\n                });\r\n\r\n\r\n\r\n\r\n                function setCorner() {\r\n                    var table = $(settings.table);\r\n\r\n                    if (settings.head) {\r\n                        if (settings.left > 0) {\r\n                            var tr = table.find(\"thead tr\");\r\n\r\n                            tr.each(function (k, row) {\r\n                                solverLeftColspan(row, function (cell) {\r\n                                    $(cell).css(\"z-index\", settings['z-index'] + 1);\r\n                                });\r\n                            });\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n                function setParent() {\r\n                    var parent = $(settings.parent);\r\n                    var table = $(settings.table);\r\n\r\n                    parent.append(table);\r\n                    parent\r\n                            .css({\r\n                                'overflow-x': 'auto',\r\n                                'overflow-y': 'auto'\r\n                            });\r\n\r\n                    parent.scroll(function () {\r\n                        var scrollWidth = parent[0].scrollWidth;\r\n                        var clientWidth = parent[0].clientWidth;\r\n                        var scrollHeight = parent[0].scrollHeight;\r\n                        var clientHeight = parent[0].clientHeight;\r\n                        var top = parent.scrollTop();\r\n                        var left = parent.scrollLeft();\r\n\r\n                        if (settings.head)\r\n                            this.find(\"thead tr > *\").css(\"top\", top);\r\n\r\n                        if (settings.foot)\r\n                            this.find(\"tfoot tr > *\").css(\"bottom\", scrollHeight - clientHeight - top);\r\n\r\n                        if (settings.left > 0)\r\n                            settings.leftColumns.css(\"left\", left);\r\n\r\n                        if (settings.right > 0)\r\n                            settings.rightColumns.css(\"right\", scrollWidth - clientWidth - left);\r\n                    }.bind(table));\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                function fixLeft() {\r\n                    var table = $(settings.table);\r\n\r\n\r\n\r\n                    settings.leftColumns = $();\r\n\r\n                    var tr = table.find(\"tr\");\r\n                    tr.each(function (k, row) {\r\n\r\n                        solverLeftColspan(row, function (cell) {\r\n                            settings.leftColumns = settings.leftColumns.add(cell);\r\n                        });\r\n\r\n                    });\r\n\r\n                    var column = settings.leftColumns;\r\n\r\n                    column.each(function (k, cell) {\r\n                        var cell = $(cell);\r\n\r\n                        setBackground(cell);\r\n                        cell.css({\r\n                            'position': 'relative'\r\n                        });\r\n                    });\r\n                }\r\n\r\n\r\n                function setBackground(elements) {\r\n                    elements.each(function (k, element) {\r\n                        var element = $(element);\r\n                        var parent = $(element).parent();\r\n\r\n                        var elementBackground = element.css(\"background-color\");\r\n                        elementBackground = (elementBackground == \"transparent\" || elementBackground == \"rgba(0, 0, 0, 0)\") ? null : elementBackground;\r\n\r\n                        var parentBackground = parent.css(\"background-color\");\r\n                        parentBackground = (parentBackground == \"transparent\" || parentBackground == \"rgba(0, 0, 0, 0)\") ? null : parentBackground;\r\n\r\n                        var background = parentBackground ? parentBackground : \"gray\";\r\n                        background = elementBackground ? elementBackground : background;\r\n\r\n                        element.css(\"background-color\", background);\r\n                    });\r\n                }\r\n\r\n                function solverLeftColspan(row, action) {\r\n                    var fixColumn = settings.left;\r\n                    var inc = 1;\r\n\r\n                    for (var i = 1; i <= fixColumn; i = i + inc) {\r\n                        var nth = inc > 1 ? i - 1 : i;\r\n\r\n                        var cell = $(row).find(\"> *:nth-child(\" + nth + \")\");\r\n                        var colspan = cell.prop(\"colspan\");\r\n\r\n                        if (cell.cellPos().left < fixColumn) {\r\n                            action(cell);\r\n                        }\r\n\r\n                        inc = colspan;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n})(jQuery);\r\n\r\n\r\n(function ($) {\r\n    function scanTable($table) {\r\n        var m = [];\r\n        $table.children(\"tr\").each(function (y, row) {\r\n            $(row).children(\"td, th\").each(function (x, cell) {\r\n                var $cell = $(cell),\r\n                        cspan = $cell.attr(\"colspan\") | 0,\r\n                        rspan = $cell.attr(\"rowspan\") | 0,\r\n                        tx, ty;\r\n                cspan = cspan ? cspan : 1;\r\n                rspan = rspan ? rspan : 1;\r\n                for (; m[y] && m[y][x]; ++x)\r\n                    ;\r\n                for (tx = x; tx < x + cspan; ++tx) {\r\n                    for (ty = y; ty < y + rspan; ++ty) {\r\n                        if (!m[ty]) {\r\n                            m[ty] = [];\r\n                        }\r\n                        m[ty][tx] = true;\r\n                    }\r\n                }\r\n                var pos = {top: y, left: x};\r\n                $cell.data(\"cellPos\", pos);\r\n            });\r\n        });\r\n    }\r\n    ;\r\n\r\n\r\n    $.fn.cellPos = function (rescan) {\r\n        var $cell = this.first(),\r\n                pos = $cell.data(\"cellPos\");\r\n        if (!pos || rescan) {\r\n            var $table = $cell.closest(\"table, thead, tbody\");\r\n            scanTable($table);\r\n        }\r\n        pos = $cell.data(\"cellPos\");\r\n        return pos;\r\n    }\r\n})(jQuery);"}
}});
