require.config({"config": {
        "jsbuild":{"Magedelight_ScheduleShipping/js/carousel.js":"/*\r\n *  jQuery OwlCarousel v1.3.3\r\n *\r\n *  Copyright (c) 2013 Bartosz Wojciechowski\r\n *  http://www.owlgraphic.com/owlcarousel/\r\n *\r\n *  Licensed under MIT\r\n *\r\n */\r\n\r\n/*JS Lint helpers: */\r\n/*global dragMove: false, dragEnd: false, $, jQuery, alert, window, document */\r\n/*jslint nomen: true, continue:true */\r\n\r\ndefine([\r\n    'jquery'\r\n], function () {\r\n    if (typeof Object.create !== \"function\") {\r\n        Object.create = function (obj) {\r\n            function F() {}\r\n            F.prototype = obj;\r\n            return new F();\r\n        };\r\n    }\r\n    (function ($, window, document) {\r\n\r\n        var Carousel = {\r\n            init: function (options, el) {\r\n                var base = this;\r\n\r\n                base.$elem = $(el);\r\n                base.options = $.extend({}, $.fn.owlCarousel.options, base.$elem.data(), options);\r\n\r\n                base.userOptions = options;\r\n                base.loadContent();\r\n            },\r\n            loadContent: function () {\r\n                var base = this, url;\r\n\r\n                function getData(data) {\r\n                    var i, content = \"\";\r\n                    if (typeof base.options.jsonSuccess === \"function\") {\r\n                        base.options.jsonSuccess.apply(this, [data]);\r\n                    } else {\r\n                        for (i in data.owl) {\r\n                            if (data.owl.hasOwnProperty(i)) {\r\n                                content += data.owl[i].item;\r\n                            }\r\n                        }\r\n                        base.$elem.html(content);\r\n                    }\r\n                    base.logIn();\r\n                }\r\n\r\n                if (typeof base.options.beforeInit === \"function\") {\r\n                    base.options.beforeInit.apply(this, [base.$elem]);\r\n                }\r\n\r\n                if (typeof base.options.jsonPath === \"string\") {\r\n                    url = base.options.jsonPath;\r\n                    $.getJSON(url, getData);\r\n                } else {\r\n                    base.logIn();\r\n                }\r\n            },\r\n            logIn: function () {\r\n                var base = this;\r\n\r\n                base.$elem.data(\"owl-originalStyles\", base.$elem.attr(\"style\"));\r\n                base.$elem.data(\"owl-originalClasses\", base.$elem.attr(\"class\"));\r\n\r\n                base.$elem.css({opacity: 0});\r\n                base.orignalItems = base.options.items;\r\n                base.checkBrowser();\r\n                base.wrapperWidth = 0;\r\n                base.checkVisible = null;\r\n                base.setVars();\r\n            },\r\n            setVars: function () {\r\n                var base = this;\r\n                if (base.$elem.children().length === 0) {\r\n                    return false;\r\n                }\r\n                base.baseClass();\r\n                base.eventTypes();\r\n                base.$userItems = base.$elem.children();\r\n                base.itemsAmount = base.$userItems.length;\r\n                base.wrapItems();\r\n                base.$owlItems = base.$elem.find(\".owl-item\");\r\n                base.$owlWrapper = base.$elem.find(\".owl-wrapper\");\r\n                base.playDirection = \"next\";\r\n                base.prevItem = 0;\r\n                base.prevArr = [0];\r\n                base.currentItem = 0;\r\n                base.customEvents();\r\n                base.onStartup();\r\n            },\r\n            onStartup: function () {\r\n                var base = this;\r\n                base.updateItems();\r\n                base.calculateAll();\r\n                base.buildControls();\r\n                base.updateControls();\r\n                base.response();\r\n                base.moveEvents();\r\n                base.stopOnHover();\r\n                base.owlStatus();\r\n\r\n                if (base.options.transitionStyle !== false) {\r\n                    base.transitionTypes(base.options.transitionStyle);\r\n                }\r\n                if (base.options.autoPlay === true) {\r\n                    base.options.autoPlay = 5000;\r\n                }\r\n                base.play();\r\n\r\n                base.$elem.find(\".owl-wrapper\").css(\"display\", \"block\");\r\n\r\n                if (!base.$elem.is(\":visible\")) {\r\n                    base.watchVisibility();\r\n                } else {\r\n                    base.$elem.css(\"opacity\", 1);\r\n                }\r\n                base.onstartup = false;\r\n                base.eachMoveUpdate();\r\n                if (typeof base.options.afterInit === \"function\") {\r\n                    base.options.afterInit.apply(this, [base.$elem]);\r\n                }\r\n            },\r\n            eachMoveUpdate: function () {\r\n                var base = this;\r\n\r\n                if (base.options.lazyLoad === true) {\r\n                    base.lazyLoad();\r\n                }\r\n                if (base.options.autoHeight === true) {\r\n                    base.autoHeight();\r\n                }\r\n                base.onVisibleItems();\r\n\r\n                if (typeof base.options.afterAction === \"function\") {\r\n                    base.options.afterAction.apply(this, [base.$elem]);\r\n                }\r\n            },\r\n            updateVars: function () {\r\n                var base = this;\r\n                if (typeof base.options.beforeUpdate === \"function\") {\r\n                    base.options.beforeUpdate.apply(this, [base.$elem]);\r\n                }\r\n                base.watchVisibility();\r\n                base.updateItems();\r\n                base.calculateAll();\r\n                base.updatePosition();\r\n                base.updateControls();\r\n                base.eachMoveUpdate();\r\n                if (typeof base.options.afterUpdate === \"function\") {\r\n                    base.options.afterUpdate.apply(this, [base.$elem]);\r\n                }\r\n            },\r\n            reload: function () {\r\n                var base = this;\r\n                window.setTimeout(function () {\r\n                    base.updateVars();\r\n                }, 0);\r\n            },\r\n            watchVisibility: function () {\r\n                var base = this;\r\n\r\n                if (base.$elem.is(\":visible\") === false) {\r\n                    base.$elem.css({opacity: 0});\r\n                    window.clearInterval(base.autoPlayInterval);\r\n                    window.clearInterval(base.checkVisible);\r\n                } else {\r\n                    return false;\r\n                }\r\n                base.checkVisible = window.setInterval(function () {\r\n                    if (base.$elem.is(\":visible\")) {\r\n                        base.reload();\r\n                        base.$elem.animate({opacity: 1}, 200);\r\n                        window.clearInterval(base.checkVisible);\r\n                    }\r\n                }, 500);\r\n            },\r\n            wrapItems: function () {\r\n                var base = this;\r\n                base.$userItems.wrapAll(\"<div class=\\\"owl-wrapper\\\">\").wrap(\"<div class=\\\"owl-item\\\"></div>\");\r\n                base.$elem.find(\".owl-wrapper\").wrap(\"<div class=\\\"owl-wrapper-outer\\\">\");\r\n                base.wrapperOuter = base.$elem.find(\".owl-wrapper-outer\");\r\n                base.$elem.css(\"display\", \"block\");\r\n            },\r\n            baseClass: function () {\r\n                var base = this,\r\n                        hasBaseClass = base.$elem.hasClass(base.options.baseClass),\r\n                        hasThemeClass = base.$elem.hasClass(base.options.theme);\r\n\r\n                if (!hasBaseClass) {\r\n                    base.$elem.addClass(base.options.baseClass);\r\n                }\r\n\r\n                if (!hasThemeClass) {\r\n                    base.$elem.addClass(base.options.theme);\r\n                }\r\n            },\r\n            updateItems: function () {\r\n                var base = this, width, i;\r\n\r\n                if (base.options.responsive === false) {\r\n                    return false;\r\n                }\r\n                if (base.options.singleItem === true) {\r\n                    base.options.items = base.orignalItems = 1;\r\n                    base.options.itemsCustom = false;\r\n                    base.options.itemsDesktop = false;\r\n                    base.options.itemsDesktopSmall = false;\r\n                    base.options.itemsTablet = false;\r\n                    base.options.itemsTabletSmall = false;\r\n                    base.options.itemsMobile = false;\r\n                    return false;\r\n                }\r\n\r\n                width = $(base.options.responsiveBaseWidth).width();\r\n\r\n                if (width > (base.options.itemsDesktop[0] || base.orignalItems)) {\r\n                    base.options.items = base.orignalItems;\r\n                }\r\n                if (base.options.itemsCustom !== false) {\r\n                    //Reorder array by screen size\r\n                    base.options.itemsCustom.sort(function (a, b) {\r\n                        return a[0] - b[0];\r\n                    });\r\n\r\n                    for (i = 0; i < base.options.itemsCustom.length; i += 1) {\r\n                        if (base.options.itemsCustom[i][0] <= width) {\r\n                            base.options.items = base.options.itemsCustom[i][1];\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (width <= base.options.itemsDesktop[0] && base.options.itemsDesktop !== false) {\r\n                        base.options.items = base.options.itemsDesktop[1];\r\n                    }\r\n\r\n                    if (width <= base.options.itemsDesktopSmall[0] && base.options.itemsDesktopSmall !== false) {\r\n                        base.options.items = base.options.itemsDesktopSmall[1];\r\n                    }\r\n\r\n                    if (width <= base.options.itemsTablet[0] && base.options.itemsTablet !== false) {\r\n                        base.options.items = base.options.itemsTablet[1];\r\n                    }\r\n\r\n                    if (width <= base.options.itemsTabletSmall[0] && base.options.itemsTabletSmall !== false) {\r\n                        base.options.items = base.options.itemsTabletSmall[1];\r\n                    }\r\n\r\n                    if (width <= base.options.itemsMobile[0] && base.options.itemsMobile !== false) {\r\n                        base.options.items = base.options.itemsMobile[1];\r\n                    }\r\n                }\r\n\r\n                //if number of items is less than declared\r\n                if (base.options.items > base.itemsAmount && base.options.itemsScaleUp === true) {\r\n                    base.options.items = base.itemsAmount;\r\n                }\r\n            },\r\n            response: function () {\r\n                var base = this,\r\n                        smallDelay,\r\n                        lastWindowWidth;\r\n\r\n                if (base.options.responsive !== true) {\r\n                    return false;\r\n                }\r\n                lastWindowWidth = $(window).width();\r\n\r\n                base.resizer = function () {\r\n                    if ($(window).width() !== lastWindowWidth) {\r\n                        if (base.options.autoPlay !== false) {\r\n                            window.clearInterval(base.autoPlayInterval);\r\n                        }\r\n                        window.clearTimeout(smallDelay);\r\n                        smallDelay = window.setTimeout(function () {\r\n                            lastWindowWidth = $(window).width();\r\n                            base.updateVars();\r\n                        }, base.options.responsiveRefreshRate);\r\n                    }\r\n                };\r\n                $(window).resize(base.resizer);\r\n            },\r\n            updatePosition: function () {\r\n                var base = this;\r\n                base.jumpTo(base.currentItem);\r\n                if (base.options.autoPlay !== false) {\r\n                    base.checkAp();\r\n                }\r\n            },\r\n            appendItemsSizes: function () {\r\n                var base = this,\r\n                        roundPages = 0,\r\n                        lastItem = base.itemsAmount - base.options.items;\r\n\r\n                base.$owlItems.each(function (index) {\r\n                    var $this = $(this);\r\n                    $this\r\n                            .css({\"width\": base.itemWidth})\r\n                            .data(\"owl-item\", Number(index));\r\n\r\n                    if (index % base.options.items === 0 || index === lastItem) {\r\n                        if (!(index > lastItem)) {\r\n                            roundPages += 1;\r\n                        }\r\n                    }\r\n                    $this.data(\"owl-roundPages\", roundPages);\r\n                });\r\n            },\r\n            appendWrapperSizes: function () {\r\n                var base = this,\r\n                        width = base.$owlItems.length * base.itemWidth;\r\n\r\n                base.$owlWrapper.css({\r\n                    \"width\": width * 2,\r\n                    \"left\": 0\r\n                });\r\n                base.appendItemsSizes();\r\n            },\r\n            calculateAll: function () {\r\n                var base = this;\r\n                base.calculateWidth();\r\n                base.appendWrapperSizes();\r\n                base.loops();\r\n                base.max();\r\n            },\r\n            calculateWidth: function () {\r\n                var base = this;\r\n                base.itemWidth = Math.round(base.$elem.width() / base.options.items);\r\n            },\r\n            max: function () {\r\n                var base = this,\r\n                        maximum = ((base.itemsAmount * base.itemWidth) - base.options.items * base.itemWidth) * -1;\r\n                if (base.options.items > base.itemsAmount) {\r\n                    base.maximumItem = 0;\r\n                    maximum = 0;\r\n                    base.maximumPixels = 0;\r\n                } else {\r\n                    base.maximumItem = base.itemsAmount - base.options.items;\r\n                    base.maximumPixels = maximum;\r\n                }\r\n                return maximum;\r\n            },\r\n            min: function () {\r\n                return 0;\r\n            },\r\n            loops: function () {\r\n                var base = this,\r\n                        prev = 0,\r\n                        elWidth = 0,\r\n                        i,\r\n                        item,\r\n                        roundPageNum;\r\n\r\n                base.positionsInArray = [0];\r\n                base.pagesInArray = [];\r\n\r\n                for (i = 0; i < base.itemsAmount; i += 1) {\r\n                    elWidth += base.itemWidth;\r\n                    base.positionsInArray.push(-elWidth);\r\n\r\n                    if (base.options.scrollPerPage === true) {\r\n                        item = $(base.$owlItems[i]);\r\n                        roundPageNum = item.data(\"owl-roundPages\");\r\n                        if (roundPageNum !== prev) {\r\n                            base.pagesInArray[prev] = base.positionsInArray[i];\r\n                            prev = roundPageNum;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            buildControls: function () {\r\n                var base = this;\r\n                if (base.options.navigation === true || base.options.pagination === true) {\r\n                    base.owlControls = $(\"<div class=\\\"owl-controls\\\"/>\").toggleClass(\"clickable\", !base.browser.isTouch).appendTo(base.$elem);\r\n                }\r\n                if (base.options.pagination === true) {\r\n                    base.buildPagination();\r\n                }\r\n                if (base.options.navigation === true) {\r\n                    base.buildButtons();\r\n                }\r\n            },\r\n            buildButtons: function () {\r\n                var base = this,\r\n                        buttonsWrapper = $(\"<div class=\\\"owl-buttons\\\"/>\");\r\n                base.owlControls.append(buttonsWrapper);\r\n\r\n                base.buttonPrev = $(\"<div/>\", {\r\n                    \"class\": \"owl-prev\",\r\n                    \"html\": base.options.navigationText[0] || \"\"\r\n                });\r\n\r\n                base.buttonNext = $(\"<div/>\", {\r\n                    \"class\": \"owl-next\",\r\n                    \"html\": base.options.navigationText[1] || \"\"\r\n                });\r\n\r\n                buttonsWrapper\r\n                        .append(base.buttonPrev)\r\n                        .append(base.buttonNext);\r\n\r\n                buttonsWrapper.on(\"touchstart.owlControls mousedown.owlControls\", \"div[class^=\\\"owl\\\"]\", function (event) {\r\n                    event.preventDefault();\r\n                });\r\n\r\n                buttonsWrapper.on(\"touchend.owlControls mouseup.owlControls\", \"div[class^=\\\"owl\\\"]\", function (event) {\r\n                    event.preventDefault();\r\n                    if ($(this).hasClass(\"owl-next\")) {\r\n                        base.next();\r\n                    } else {\r\n                        base.prev();\r\n                    }\r\n                });\r\n            },\r\n            buildPagination: function () {\r\n                var base = this;\r\n\r\n                base.paginationWrapper = $(\"<div class=\\\"owl-pagination\\\"/>\");\r\n                base.owlControls.append(base.paginationWrapper);\r\n\r\n                base.paginationWrapper.on(\"touchend.owlControls mouseup.owlControls\", \".owl-page\", function (event) {\r\n                    event.preventDefault();\r\n                    if (Number($(this).data(\"owl-page\")) !== base.currentItem) {\r\n                        base.goTo(Number($(this).data(\"owl-page\")), true);\r\n                    }\r\n                });\r\n            },\r\n            updatePagination: function () {\r\n                var base = this,\r\n                        counter,\r\n                        lastPage,\r\n                        lastItem,\r\n                        i,\r\n                        paginationButton,\r\n                        paginationButtonInner;\r\n\r\n                if (base.options.pagination === false) {\r\n                    return false;\r\n                }\r\n\r\n                base.paginationWrapper.html(\"\");\r\n\r\n                counter = 0;\r\n                lastPage = base.itemsAmount - base.itemsAmount % base.options.items;\r\n\r\n                for (i = 0; i < base.itemsAmount; i += 1) {\r\n                    if (i % base.options.items === 0) {\r\n                        counter += 1;\r\n                        if (lastPage === i) {\r\n                            lastItem = base.itemsAmount - base.options.items;\r\n                        }\r\n                        paginationButton = $(\"<div/>\", {\r\n                            \"class\": \"owl-page\"\r\n                        });\r\n                        paginationButtonInner = $(\"<span></span>\", {\r\n                            \"text\": base.options.paginationNumbers === true ? counter : \"\",\r\n                            \"class\": base.options.paginationNumbers === true ? \"owl-numbers\" : \"\"\r\n                        });\r\n                        paginationButton.append(paginationButtonInner);\r\n\r\n                        paginationButton.data(\"owl-page\", lastPage === i ? lastItem : i);\r\n                        paginationButton.data(\"owl-roundPages\", counter);\r\n\r\n                        base.paginationWrapper.append(paginationButton);\r\n                    }\r\n                }\r\n                base.checkPagination();\r\n            },\r\n            checkPagination: function () {\r\n                var base = this;\r\n                if (base.options.pagination === false) {\r\n                    return false;\r\n                }\r\n                base.paginationWrapper.find(\".owl-page\").each(function () {\r\n                    if ($(this).data(\"owl-roundPages\") === $(base.$owlItems[base.currentItem]).data(\"owl-roundPages\")) {\r\n                        base.paginationWrapper\r\n                                .find(\".owl-page\")\r\n                                .removeClass(\"active\");\r\n                        $(this).addClass(\"active\");\r\n                    }\r\n                });\r\n            },\r\n            checkNavigation: function () {\r\n                var base = this;\r\n\r\n                if (base.options.navigation === false) {\r\n                    return false;\r\n                }\r\n                if (base.options.rewindNav === false) {\r\n                    if (base.currentItem === 0 && base.maximumItem === 0) {\r\n                        base.buttonPrev.addClass(\"disabled\");\r\n                        base.buttonNext.addClass(\"disabled\");\r\n                    } else if (base.currentItem === 0 && base.maximumItem !== 0) {\r\n                        base.buttonPrev.addClass(\"disabled\");\r\n                        base.buttonNext.removeClass(\"disabled\");\r\n                    } else if (base.currentItem === base.maximumItem) {\r\n                        base.buttonPrev.removeClass(\"disabled\");\r\n                        base.buttonNext.addClass(\"disabled\");\r\n                    } else if (base.currentItem !== 0 && base.currentItem !== base.maximumItem) {\r\n                        base.buttonPrev.removeClass(\"disabled\");\r\n                        base.buttonNext.removeClass(\"disabled\");\r\n                    }\r\n                }\r\n            },\r\n            updateControls: function () {\r\n                var base = this;\r\n                base.updatePagination();\r\n                base.checkNavigation();\r\n                if (base.owlControls) {\r\n                    if (base.options.items >= base.itemsAmount) {\r\n                        base.owlControls.hide();\r\n                    } else {\r\n                        base.owlControls.show();\r\n                    }\r\n                }\r\n            },\r\n            destroyControls: function () {\r\n                var base = this;\r\n                if (base.owlControls) {\r\n                    base.owlControls.remove();\r\n                }\r\n            },\r\n            next: function (speed) {\r\n                var base = this;\r\n\r\n                if (base.isTransition) {\r\n                    return false;\r\n                }\r\n\r\n                base.currentItem += base.options.scrollPerPage === true ? base.options.items : 1;\r\n                if (base.currentItem > base.maximumItem + (base.options.scrollPerPage === true ? (base.options.items - 1) : 0)) {\r\n                    if (base.options.rewindNav === true) {\r\n                        base.currentItem = 0;\r\n                        speed = \"rewind\";\r\n                    } else {\r\n                        base.currentItem = base.maximumItem;\r\n                        return false;\r\n                    }\r\n                }\r\n                base.goTo(base.currentItem, speed);\r\n            },\r\n            prev: function (speed) {\r\n                var base = this;\r\n\r\n                if (base.isTransition) {\r\n                    return false;\r\n                }\r\n\r\n                if (base.options.scrollPerPage === true && base.currentItem > 0 && base.currentItem < base.options.items) {\r\n                    base.currentItem = 0;\r\n                } else {\r\n                    base.currentItem -= base.options.scrollPerPage === true ? base.options.items : 1;\r\n                }\r\n                if (base.currentItem < 0) {\r\n                    if (base.options.rewindNav === true) {\r\n                        base.currentItem = base.maximumItem;\r\n                        speed = \"rewind\";\r\n                    } else {\r\n                        base.currentItem = 0;\r\n                        return false;\r\n                    }\r\n                }\r\n                base.goTo(base.currentItem, speed);\r\n            },\r\n            goTo: function (position, speed, drag) {\r\n                var base = this,\r\n                        goToPixel;\r\n\r\n                if (base.isTransition) {\r\n                    return false;\r\n                }\r\n                if (typeof base.options.beforeMove === \"function\") {\r\n                    base.options.beforeMove.apply(this, [base.$elem]);\r\n                }\r\n                if (position >= base.maximumItem) {\r\n                    position = base.maximumItem;\r\n                } else if (position <= 0) {\r\n                    position = 0;\r\n                }\r\n\r\n                base.currentItem = base.owl.currentItem = position;\r\n                if (base.options.transitionStyle !== false && drag !== \"drag\" && base.options.items === 1 && base.browser.support3d === true) {\r\n                    base.swapSpeed(0);\r\n                    if (base.browser.support3d === true) {\r\n                        base.transition3d(base.positionsInArray[position]);\r\n                    } else {\r\n                        base.css2slide(base.positionsInArray[position], 1);\r\n                    }\r\n                    base.afterGo();\r\n                    base.singleItemTransition();\r\n                    return false;\r\n                }\r\n                goToPixel = base.positionsInArray[position];\r\n\r\n                if (base.browser.support3d === true) {\r\n                    base.isCss3Finish = false;\r\n\r\n                    if (speed === true) {\r\n                        base.swapSpeed(\"paginationSpeed\");\r\n                        window.setTimeout(function () {\r\n                            base.isCss3Finish = true;\r\n                        }, base.options.paginationSpeed);\r\n\r\n                    } else if (speed === \"rewind\") {\r\n                        base.swapSpeed(base.options.rewindSpeed);\r\n                        window.setTimeout(function () {\r\n                            base.isCss3Finish = true;\r\n                        }, base.options.rewindSpeed);\r\n\r\n                    } else {\r\n                        base.swapSpeed(\"slideSpeed\");\r\n                        window.setTimeout(function () {\r\n                            base.isCss3Finish = true;\r\n                        }, base.options.slideSpeed);\r\n                    }\r\n                    base.transition3d(goToPixel);\r\n                } else {\r\n                    if (speed === true) {\r\n                        base.css2slide(goToPixel, base.options.paginationSpeed);\r\n                    } else if (speed === \"rewind\") {\r\n                        base.css2slide(goToPixel, base.options.rewindSpeed);\r\n                    } else {\r\n                        base.css2slide(goToPixel, base.options.slideSpeed);\r\n                    }\r\n                }\r\n                base.afterGo();\r\n            },\r\n            jumpTo: function (position) {\r\n                var base = this;\r\n                if (typeof base.options.beforeMove === \"function\") {\r\n                    base.options.beforeMove.apply(this, [base.$elem]);\r\n                }\r\n                if (position >= base.maximumItem || position === -1) {\r\n                    position = base.maximumItem;\r\n                } else if (position <= 0) {\r\n                    position = 0;\r\n                }\r\n                base.swapSpeed(0);\r\n                if (base.browser.support3d === true) {\r\n                    base.transition3d(base.positionsInArray[position]);\r\n                } else {\r\n                    base.css2slide(base.positionsInArray[position], 1);\r\n                }\r\n                base.currentItem = base.owl.currentItem = position;\r\n                base.afterGo();\r\n            },\r\n            afterGo: function () {\r\n                var base = this;\r\n\r\n                base.prevArr.push(base.currentItem);\r\n                base.prevItem = base.owl.prevItem = base.prevArr[base.prevArr.length - 2];\r\n                base.prevArr.shift(0);\r\n\r\n                if (base.prevItem !== base.currentItem) {\r\n                    base.checkPagination();\r\n                    base.checkNavigation();\r\n                    base.eachMoveUpdate();\r\n\r\n                    if (base.options.autoPlay !== false) {\r\n                        base.checkAp();\r\n                    }\r\n                }\r\n                if (typeof base.options.afterMove === \"function\" && base.prevItem !== base.currentItem) {\r\n                    base.options.afterMove.apply(this, [base.$elem]);\r\n                }\r\n            },\r\n            stop: function () {\r\n                var base = this;\r\n                base.apStatus = \"stop\";\r\n                window.clearInterval(base.autoPlayInterval);\r\n            },\r\n            checkAp: function () {\r\n                var base = this;\r\n                if (base.apStatus !== \"stop\") {\r\n                    base.play();\r\n                }\r\n            },\r\n            play: function () {\r\n                var base = this;\r\n                base.apStatus = \"play\";\r\n                if (base.options.autoPlay === false) {\r\n                    return false;\r\n                }\r\n                window.clearInterval(base.autoPlayInterval);\r\n                base.autoPlayInterval = window.setInterval(function () {\r\n                    base.next(true);\r\n                }, base.options.autoPlay);\r\n            },\r\n            swapSpeed: function (action) {\r\n                var base = this;\r\n                if (action === \"slideSpeed\") {\r\n                    base.$owlWrapper.css(base.addCssSpeed(base.options.slideSpeed));\r\n                } else if (action === \"paginationSpeed\") {\r\n                    base.$owlWrapper.css(base.addCssSpeed(base.options.paginationSpeed));\r\n                } else if (typeof action !== \"string\") {\r\n                    base.$owlWrapper.css(base.addCssSpeed(action));\r\n                }\r\n            },\r\n            addCssSpeed: function (speed) {\r\n                return {\r\n                    \"-webkit-transition\": \"all \" + speed + \"ms ease\",\r\n                    \"-moz-transition\": \"all \" + speed + \"ms ease\",\r\n                    \"-o-transition\": \"all \" + speed + \"ms ease\",\r\n                    \"transition\": \"all \" + speed + \"ms ease\"\r\n                };\r\n            },\r\n            removeTransition: function () {\r\n                return {\r\n                    \"-webkit-transition\": \"\",\r\n                    \"-moz-transition\": \"\",\r\n                    \"-o-transition\": \"\",\r\n                    \"transition\": \"\"\r\n                };\r\n            },\r\n            doTranslate: function (pixels) {\r\n                return {\r\n                    \"-webkit-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\",\r\n                    \"-moz-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\",\r\n                    \"-o-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\",\r\n                    \"-ms-transform\": \"translate3d(\" + pixels + \"px, 0px, 0px)\",\r\n                    \"transform\": \"translate3d(\" + pixels + \"px, 0px,0px)\"\r\n                };\r\n            },\r\n            transition3d: function (value) {\r\n                var base = this;\r\n                base.$owlWrapper.css(base.doTranslate(value));\r\n            },\r\n            css2move: function (value) {\r\n                var base = this;\r\n                base.$owlWrapper.css({\"left\": value});\r\n            },\r\n            css2slide: function (value, speed) {\r\n                var base = this;\r\n\r\n                base.isCssFinish = false;\r\n                base.$owlWrapper.stop(true, true).animate({\r\n                    \"left\": value\r\n                }, {\r\n                    duration: speed || base.options.slideSpeed,\r\n                    complete: function () {\r\n                        base.isCssFinish = true;\r\n                    }\r\n                });\r\n            },\r\n            checkBrowser: function () {\r\n                var base = this,\r\n                        translate3D = \"translate3d(0px, 0px, 0px)\",\r\n                        tempElem = document.createElement(\"div\"),\r\n                        regex,\r\n                        asSupport,\r\n                        support3d,\r\n                        isTouch;\r\n\r\n                tempElem.style.cssText = \"  -moz-transform:\" + translate3D +\r\n                        \"; -ms-transform:\" + translate3D +\r\n                        \"; -o-transform:\" + translate3D +\r\n                        \"; -webkit-transform:\" + translate3D +\r\n                        \"; transform:\" + translate3D;\r\n                regex = /translate3d\\(0px, 0px, 0px\\)/g;\r\n                asSupport = tempElem.style.cssText.match(regex);\r\n                support3d = (asSupport !== null && asSupport.length === 1);\r\n\r\n                isTouch = \"ontouchstart\" in window || window.navigator.msMaxTouchPoints;\r\n\r\n                base.browser = {\r\n                    \"support3d\": support3d,\r\n                    \"isTouch\": isTouch\r\n                };\r\n            },\r\n            moveEvents: function () {\r\n                var base = this;\r\n                if (base.options.mouseDrag !== false || base.options.touchDrag !== false) {\r\n                    base.gestures();\r\n                    base.disabledEvents();\r\n                }\r\n            },\r\n            eventTypes: function () {\r\n                var base = this,\r\n                        types = [\"s\", \"e\", \"x\"];\r\n\r\n                base.ev_types = {};\r\n\r\n                if (base.options.mouseDrag === true && base.options.touchDrag === true) {\r\n                    types = [\r\n                        \"touchstart.owl mousedown.owl\",\r\n                        \"touchmove.owl mousemove.owl\",\r\n                        \"touchend.owl touchcancel.owl mouseup.owl\"\r\n                    ];\r\n                } else if (base.options.mouseDrag === false && base.options.touchDrag === true) {\r\n                    types = [\r\n                        \"touchstart.owl\",\r\n                        \"touchmove.owl\",\r\n                        \"touchend.owl touchcancel.owl\"\r\n                    ];\r\n                } else if (base.options.mouseDrag === true && base.options.touchDrag === false) {\r\n                    types = [\r\n                        \"mousedown.owl\",\r\n                        \"mousemove.owl\",\r\n                        \"mouseup.owl\"\r\n                    ];\r\n                }\r\n\r\n                base.ev_types.start = types[0];\r\n                base.ev_types.move = types[1];\r\n                base.ev_types.end = types[2];\r\n            },\r\n            disabledEvents: function () {\r\n                var base = this;\r\n                base.$elem.on(\"dragstart.owl\", function (event) {\r\n                    event.preventDefault();\r\n                });\r\n                base.$elem.on(\"mousedown.disableTextSelect\", function (e) {\r\n                    return $(e.target).is('input, textarea, select, option');\r\n                });\r\n            },\r\n            gestures: function () {\r\n                /*jslint unparam: true*/\r\n                var base = this,\r\n                        locals = {\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            baseElWidth: 0,\r\n                            relativePos: 0,\r\n                            position: null,\r\n                            minSwipe: null,\r\n                            maxSwipe: null,\r\n                            sliding: null,\r\n                            dargging: null,\r\n                            targetElement: null\r\n                        };\r\n\r\n                base.isCssFinish = true;\r\n\r\n                function getTouches(event) {\r\n                    if (event.touches !== undefined) {\r\n                        return {\r\n                            x: event.touches[0].pageX,\r\n                            y: event.touches[0].pageY\r\n                        };\r\n                    }\r\n\r\n                    if (event.touches === undefined) {\r\n                        if (event.pageX !== undefined) {\r\n                            return {\r\n                                x: event.pageX,\r\n                                y: event.pageY\r\n                            };\r\n                        }\r\n                        if (event.pageX === undefined) {\r\n                            return {\r\n                                x: event.clientX,\r\n                                y: event.clientY\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function swapEvents(type) {\r\n                    if (type === \"on\") {\r\n                        $(document).on(base.ev_types.move, dragMove);\r\n                        $(document).on(base.ev_types.end, dragEnd);\r\n                    } else if (type === \"off\") {\r\n                        $(document).off(base.ev_types.move);\r\n                        $(document).off(base.ev_types.end);\r\n                    }\r\n                }\r\n\r\n                function dragStart(event) {\r\n                    var ev = event.originalEvent || event || window.event,\r\n                            position;\r\n\r\n                    if (ev.which === 3) {\r\n                        return false;\r\n                    }\r\n                    if (base.itemsAmount <= base.options.items) {\r\n                        return;\r\n                    }\r\n                    if (base.isCssFinish === false && !base.options.dragBeforeAnimFinish) {\r\n                        return false;\r\n                    }\r\n                    if (base.isCss3Finish === false && !base.options.dragBeforeAnimFinish) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (base.options.autoPlay !== false) {\r\n                        window.clearInterval(base.autoPlayInterval);\r\n                    }\r\n\r\n                    if (base.browser.isTouch !== true && !base.$owlWrapper.hasClass(\"grabbing\")) {\r\n                        base.$owlWrapper.addClass(\"grabbing\");\r\n                    }\r\n\r\n                    base.newPosX = 0;\r\n                    base.newRelativeX = 0;\r\n\r\n                    $(this).css(base.removeTransition());\r\n\r\n                    position = $(this).position();\r\n                    locals.relativePos = position.left;\r\n\r\n                    locals.offsetX = getTouches(ev).x - position.left;\r\n                    locals.offsetY = getTouches(ev).y - position.top;\r\n\r\n                    swapEvents(\"on\");\r\n\r\n                    locals.sliding = false;\r\n                    locals.targetElement = ev.target || ev.srcElement;\r\n                }\r\n\r\n                function dragMove(event) {\r\n                    var ev = event.originalEvent || event || window.event,\r\n                            minSwipe,\r\n                            maxSwipe;\r\n\r\n                    base.newPosX = getTouches(ev).x - locals.offsetX;\r\n                    base.newPosY = getTouches(ev).y - locals.offsetY;\r\n                    base.newRelativeX = base.newPosX - locals.relativePos;\r\n\r\n                    if (typeof base.options.startDragging === \"function\" && locals.dragging !== true && base.newRelativeX !== 0) {\r\n                        locals.dragging = true;\r\n                        base.options.startDragging.apply(base, [base.$elem]);\r\n                    }\r\n\r\n                    if ((base.newRelativeX > 8 || base.newRelativeX < -8) && (base.browser.isTouch === true)) {\r\n                        if (ev.preventDefault !== undefined) {\r\n                            ev.preventDefault();\r\n                        } else {\r\n                            ev.returnValue = false;\r\n                        }\r\n                        locals.sliding = true;\r\n                    }\r\n\r\n                    if ((base.newPosY > 10 || base.newPosY < -10) && locals.sliding === false) {\r\n                        $(document).off(\"touchmove.owl\");\r\n                    }\r\n\r\n                    minSwipe = function () {\r\n                        return base.newRelativeX / 5;\r\n                    };\r\n\r\n                    maxSwipe = function () {\r\n                        return base.maximumPixels + base.newRelativeX / 5;\r\n                    };\r\n\r\n                    base.newPosX = Math.max(Math.min(base.newPosX, minSwipe()), maxSwipe());\r\n                    if (base.browser.support3d === true) {\r\n                        base.transition3d(base.newPosX);\r\n                    } else {\r\n                        base.css2move(base.newPosX);\r\n                    }\r\n                }\r\n\r\n                function dragEnd(event) {\r\n                    var ev = event.originalEvent || event || window.event,\r\n                            newPosition,\r\n                            handlers,\r\n                            owlStopEvent;\r\n\r\n                    ev.target = ev.target || ev.srcElement;\r\n\r\n                    locals.dragging = false;\r\n\r\n                    if (base.browser.isTouch !== true) {\r\n                        base.$owlWrapper.removeClass(\"grabbing\");\r\n                    }\r\n\r\n                    if (base.newRelativeX < 0) {\r\n                        base.dragDirection = base.owl.dragDirection = \"left\";\r\n                    } else {\r\n                        base.dragDirection = base.owl.dragDirection = \"right\";\r\n                    }\r\n\r\n                    if (base.newRelativeX !== 0) {\r\n                        newPosition = base.getNewPosition();\r\n                        base.goTo(newPosition, false, \"drag\");\r\n                        if (locals.targetElement === ev.target && base.browser.isTouch !== true) {\r\n                            $(ev.target).on(\"click.disable\", function (ev) {\r\n                                ev.stopImmediatePropagation();\r\n                                ev.stopPropagation();\r\n                                ev.preventDefault();\r\n                                $(ev.target).off(\"click.disable\");\r\n                            });\r\n                            handlers = $._data(ev.target, \"events\").click;\r\n                            owlStopEvent = handlers.pop();\r\n                            handlers.splice(0, 0, owlStopEvent);\r\n                        }\r\n                    }\r\n                    swapEvents(\"off\");\r\n                }\r\n                base.$elem.on(base.ev_types.start, \".owl-wrapper\", dragStart);\r\n            },\r\n            getNewPosition: function () {\r\n                var base = this,\r\n                        newPosition = base.closestItem();\r\n\r\n                if (newPosition > base.maximumItem) {\r\n                    base.currentItem = base.maximumItem;\r\n                    newPosition = base.maximumItem;\r\n                } else if (base.newPosX >= 0) {\r\n                    newPosition = 0;\r\n                    base.currentItem = 0;\r\n                }\r\n                return newPosition;\r\n            },\r\n            closestItem: function () {\r\n                var base = this,\r\n                        array = base.options.scrollPerPage === true ? base.pagesInArray : base.positionsInArray,\r\n                        goal = base.newPosX,\r\n                        closest = null;\r\n\r\n                $.each(array, function (i, v) {\r\n                    if (goal - (base.itemWidth / 20) > array[i + 1] && goal - (base.itemWidth / 20) < v && base.moveDirection() === \"left\") {\r\n                        closest = v;\r\n                        if (base.options.scrollPerPage === true) {\r\n                            base.currentItem = $.inArray(closest, base.positionsInArray);\r\n                        } else {\r\n                            base.currentItem = i;\r\n                        }\r\n                    } else if (goal + (base.itemWidth / 20) < v && goal + (base.itemWidth / 20) > (array[i + 1] || array[i] - base.itemWidth) && base.moveDirection() === \"right\") {\r\n                        if (base.options.scrollPerPage === true) {\r\n                            closest = array[i + 1] || array[array.length - 1];\r\n                            base.currentItem = $.inArray(closest, base.positionsInArray);\r\n                        } else {\r\n                            closest = array[i + 1];\r\n                            base.currentItem = i + 1;\r\n                        }\r\n                    }\r\n                });\r\n                return base.currentItem;\r\n            },\r\n            moveDirection: function () {\r\n                var base = this,\r\n                        direction;\r\n                if (base.newRelativeX < 0) {\r\n                    direction = \"right\";\r\n                    base.playDirection = \"next\";\r\n                } else {\r\n                    direction = \"left\";\r\n                    base.playDirection = \"prev\";\r\n                }\r\n                return direction;\r\n            },\r\n            customEvents: function () {\r\n                /*jslint unparam: true*/\r\n                var base = this;\r\n                base.$elem.on(\"owl.next\", function () {\r\n                    base.next();\r\n                });\r\n                base.$elem.on(\"owl.prev\", function () {\r\n                    base.prev();\r\n                });\r\n                base.$elem.on(\"owl.play\", function (event, speed) {\r\n                    base.options.autoPlay = speed;\r\n                    base.play();\r\n                    base.hoverStatus = \"play\";\r\n                });\r\n                base.$elem.on(\"owl.stop\", function () {\r\n                    base.stop();\r\n                    base.hoverStatus = \"stop\";\r\n                });\r\n                base.$elem.on(\"owl.goTo\", function (event, item) {\r\n                    base.goTo(item);\r\n                });\r\n                base.$elem.on(\"owl.jumpTo\", function (event, item) {\r\n                    base.jumpTo(item);\r\n                });\r\n            },\r\n            stopOnHover: function () {\r\n                var base = this;\r\n                if (base.options.stopOnHover === true && base.browser.isTouch !== true && base.options.autoPlay !== false) {\r\n                    base.$elem.on(\"mouseover\", function () {\r\n                        base.stop();\r\n                    });\r\n                    base.$elem.on(\"mouseout\", function () {\r\n                        if (base.hoverStatus !== \"stop\") {\r\n                            base.play();\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            lazyLoad: function () {\r\n                var base = this,\r\n                        i,\r\n                        $item,\r\n                        itemNumber,\r\n                        $lazyImg,\r\n                        follow;\r\n\r\n                if (base.options.lazyLoad === false) {\r\n                    return false;\r\n                }\r\n                for (i = 0; i < base.itemsAmount; i += 1) {\r\n                    $item = $(base.$owlItems[i]);\r\n\r\n                    if ($item.data(\"owl-loaded\") === \"loaded\") {\r\n                        continue;\r\n                    }\r\n\r\n                    itemNumber = $item.data(\"owl-item\");\r\n                    $lazyImg = $item.find(\".lazyOwl\");\r\n\r\n                    if (typeof $lazyImg.data(\"src\") !== \"string\") {\r\n                        $item.data(\"owl-loaded\", \"loaded\");\r\n                        continue;\r\n                    }\r\n                    if ($item.data(\"owl-loaded\") === undefined) {\r\n                        $lazyImg.hide();\r\n                        $item.addClass(\"loading\").data(\"owl-loaded\", \"checked\");\r\n                    }\r\n                    if (base.options.lazyFollow === true) {\r\n                        follow = itemNumber >= base.currentItem;\r\n                    } else {\r\n                        follow = true;\r\n                    }\r\n                    if (follow && itemNumber < base.currentItem + base.options.items && $lazyImg.length) {\r\n                        base.lazyPreload($item, $lazyImg);\r\n                    }\r\n                }\r\n            },\r\n            lazyPreload: function ($item, $lazyImg) {\r\n                var base = this,\r\n                        iterations = 0,\r\n                        isBackgroundImg;\r\n\r\n                if ($lazyImg.prop(\"tagName\") === \"DIV\") {\r\n                    $lazyImg.css(\"background-image\", \"url(\" + $lazyImg.data(\"src\") + \")\");\r\n                    isBackgroundImg = true;\r\n                } else {\r\n                    $lazyImg[0].src = $lazyImg.data(\"src\");\r\n                }\r\n\r\n                function showImage() {\r\n                    $item.data(\"owl-loaded\", \"loaded\").removeClass(\"loading\");\r\n                    $lazyImg.removeAttr(\"data-src\");\r\n                    if (base.options.lazyEffect === \"fade\") {\r\n                        $lazyImg.fadeIn(400);\r\n                    } else {\r\n                        $lazyImg.show();\r\n                    }\r\n                    if (typeof base.options.afterLazyLoad === \"function\") {\r\n                        base.options.afterLazyLoad.apply(this, [base.$elem]);\r\n                    }\r\n                }\r\n\r\n                function checkLazyImage() {\r\n                    iterations += 1;\r\n                    if (base.completeImg($lazyImg.get(0)) || isBackgroundImg === true) {\r\n                        showImage();\r\n                    } else if (iterations <= 100) {//if image loads in less than 10 seconds \r\n                        window.setTimeout(checkLazyImage, 100);\r\n                    } else {\r\n                        showImage();\r\n                    }\r\n                }\r\n\r\n                checkLazyImage();\r\n            },\r\n            autoHeight: function () {\r\n                var base = this,\r\n                        $currentimg = $(base.$owlItems[base.currentItem]).find(\"img\"),\r\n                        iterations;\r\n\r\n                function addHeight() {\r\n                    var $currentItem = $(base.$owlItems[base.currentItem]).height();\r\n                    base.wrapperOuter.css(\"height\", $currentItem + \"px\");\r\n                    if (!base.wrapperOuter.hasClass(\"autoHeight\")) {\r\n                        window.setTimeout(function () {\r\n                            base.wrapperOuter.addClass(\"autoHeight\");\r\n                        }, 0);\r\n                    }\r\n                }\r\n\r\n                function checkImage() {\r\n                    iterations += 1;\r\n                    if (base.completeImg($currentimg.get(0))) {\r\n                        addHeight();\r\n                    } else if (iterations <= 100) { //if image loads in less than 10 seconds \r\n                        window.setTimeout(checkImage, 100);\r\n                    } else {\r\n                        base.wrapperOuter.css(\"height\", \"\"); //Else remove height attribute\r\n                    }\r\n                }\r\n\r\n                if ($currentimg.get(0) !== undefined) {\r\n                    iterations = 0;\r\n                    checkImage();\r\n                } else {\r\n                    addHeight();\r\n                }\r\n            },\r\n            completeImg: function (img) {\r\n                var naturalWidthType;\r\n\r\n                if (!img.complete) {\r\n                    return false;\r\n                }\r\n                naturalWidthType = typeof img.naturalWidth;\r\n                if (naturalWidthType !== \"undefined\" && img.naturalWidth === 0) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            onVisibleItems: function () {\r\n                var base = this,\r\n                        i;\r\n\r\n                if (base.options.addClassActive === true) {\r\n                    base.$owlItems.removeClass(\"active\");\r\n                }\r\n                base.visibleItems = [];\r\n                for (i = base.currentItem; i < base.currentItem + base.options.items; i += 1) {\r\n                    base.visibleItems.push(i);\r\n\r\n                    if (base.options.addClassActive === true) {\r\n                        $(base.$owlItems[i]).addClass(\"active\");\r\n                    }\r\n                }\r\n                base.owl.visibleItems = base.visibleItems;\r\n            },\r\n            transitionTypes: function (className) {\r\n                var base = this;\r\n                //Currently available: \"fade\", \"backSlide\", \"goDown\", \"fadeUp\"\r\n                base.outClass = \"owl-\" + className + \"-out\";\r\n                base.inClass = \"owl-\" + className + \"-in\";\r\n            },\r\n            singleItemTransition: function () {\r\n                var base = this,\r\n                        outClass = base.outClass,\r\n                        inClass = base.inClass,\r\n                        $currentItem = base.$owlItems.eq(base.currentItem),\r\n                        $prevItem = base.$owlItems.eq(base.prevItem),\r\n                        prevPos = Math.abs(base.positionsInArray[base.currentItem]) + base.positionsInArray[base.prevItem],\r\n                        origin = Math.abs(base.positionsInArray[base.currentItem]) + base.itemWidth / 2,\r\n                        animEnd = 'webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend';\r\n\r\n                base.isTransition = true;\r\n\r\n                base.$owlWrapper\r\n                        .addClass('owl-origin')\r\n                        .css({\r\n                            \"-webkit-transform-origin\": origin + \"px\",\r\n                            \"-moz-perspective-origin\": origin + \"px\",\r\n                            \"perspective-origin\": origin + \"px\"\r\n                        });\r\n                function transStyles(prevPos) {\r\n                    return {\r\n                        \"position\": \"relative\",\r\n                        \"left\": prevPos + \"px\"\r\n                    };\r\n                }\r\n\r\n                $prevItem\r\n                        .css(transStyles(prevPos, 10))\r\n                        .addClass(outClass)\r\n                        .on(animEnd, function () {\r\n                            base.endPrev = true;\r\n                            $prevItem.off(animEnd);\r\n                            base.clearTransStyle($prevItem, outClass);\r\n                        });\r\n\r\n                $currentItem\r\n                        .addClass(inClass)\r\n                        .on(animEnd, function () {\r\n                            base.endCurrent = true;\r\n                            $currentItem.off(animEnd);\r\n                            base.clearTransStyle($currentItem, inClass);\r\n                        });\r\n            },\r\n            clearTransStyle: function (item, classToRemove) {\r\n                var base = this;\r\n                item.css({\r\n                    \"position\": \"\",\r\n                    \"left\": \"\"\r\n                }).removeClass(classToRemove);\r\n\r\n                if (base.endPrev && base.endCurrent) {\r\n                    base.$owlWrapper.removeClass('owl-origin');\r\n                    base.endPrev = false;\r\n                    base.endCurrent = false;\r\n                    base.isTransition = false;\r\n                }\r\n            },\r\n            owlStatus: function () {\r\n                var base = this;\r\n                base.owl = {\r\n                    \"userOptions\": base.userOptions,\r\n                    \"baseElement\": base.$elem,\r\n                    \"userItems\": base.$userItems,\r\n                    \"owlItems\": base.$owlItems,\r\n                    \"currentItem\": base.currentItem,\r\n                    \"prevItem\": base.prevItem,\r\n                    \"visibleItems\": base.visibleItems,\r\n                    \"isTouch\": base.browser.isTouch,\r\n                    \"browser\": base.browser,\r\n                    \"dragDirection\": base.dragDirection\r\n                };\r\n            },\r\n            clearEvents: function () {\r\n                var base = this;\r\n                base.$elem.off(\".owl owl mousedown.disableTextSelect\");\r\n                $(document).off(\".owl owl\");\r\n                $(window).off(\"resize\", base.resizer);\r\n            },\r\n            unWrap: function () {\r\n                var base = this;\r\n                if (base.$elem.children().length !== 0) {\r\n                    base.$owlWrapper.unwrap();\r\n                    base.$userItems.unwrap().unwrap();\r\n                    if (base.owlControls) {\r\n                        base.owlControls.remove();\r\n                    }\r\n                }\r\n                base.clearEvents();\r\n                base.$elem\r\n                        .attr(\"style\", base.$elem.data(\"owl-originalStyles\") || \"\")\r\n                        .attr(\"class\", base.$elem.data(\"owl-originalClasses\"));\r\n            },\r\n            destroy: function () {\r\n                var base = this;\r\n                base.stop();\r\n                window.clearInterval(base.checkVisible);\r\n                base.unWrap();\r\n                base.$elem.removeData();\r\n            },\r\n            reinit: function (newOptions) {\r\n                var base = this,\r\n                        options = $.extend({}, base.userOptions, newOptions);\r\n                base.unWrap();\r\n                base.init(options, base.$elem);\r\n            },\r\n            addItem: function (htmlString, targetPosition) {\r\n                var base = this,\r\n                        position;\r\n\r\n                if (!htmlString) {\r\n                    return false;\r\n                }\r\n\r\n                if (base.$elem.children().length === 0) {\r\n                    base.$elem.append(htmlString);\r\n                    base.setVars();\r\n                    return false;\r\n                }\r\n                base.unWrap();\r\n                if (targetPosition === undefined || targetPosition === -1) {\r\n                    position = -1;\r\n                } else {\r\n                    position = targetPosition;\r\n                }\r\n                if (position >= base.$userItems.length || position === -1) {\r\n                    base.$userItems.eq(-1).after(htmlString);\r\n                } else {\r\n                    base.$userItems.eq(position).before(htmlString);\r\n                }\r\n\r\n                base.setVars();\r\n            },\r\n            removeItem: function (targetPosition) {\r\n                var base = this,\r\n                        position;\r\n\r\n                if (base.$elem.children().length === 0) {\r\n                    return false;\r\n                }\r\n                if (targetPosition === undefined || targetPosition === -1) {\r\n                    position = -1;\r\n                } else {\r\n                    position = targetPosition;\r\n                }\r\n\r\n                base.unWrap();\r\n                base.$userItems.eq(position).remove();\r\n                base.setVars();\r\n            }\r\n\r\n        };\r\n\r\n        $.fn.owlCarousel = function (options) {\r\n            return this.each(function () {\r\n                if ($(this).data(\"owl-init\") === true) {\r\n                    return false;\r\n                }\r\n                $(this).data(\"owl-init\", true);\r\n                var carousel = Object.create(Carousel);\r\n                carousel.init(options, this);\r\n                $.data(this, \"owlCarousel\", carousel);\r\n            });\r\n        };\r\n\r\n        $.fn.owlCarousel.options = {\r\n            items: 5,\r\n            itemsCustom: false,\r\n            itemsDesktop: [1199, 4],\r\n            itemsDesktopSmall: [979, 3],\r\n            itemsTablet: [768, 2],\r\n            itemsTabletSmall: false,\r\n            itemsMobile: [479, 1],\r\n            singleItem: false,\r\n            itemsScaleUp: false,\r\n            slideSpeed: 200,\r\n            paginationSpeed: 800,\r\n            rewindSpeed: 1000,\r\n            autoPlay: false,\r\n            stopOnHover: false,\r\n            navigation: false,\r\n            navigationText: [\"prev\", \"next\"],\r\n            rewindNav: true,\r\n            scrollPerPage: false,\r\n            pagination: true,\r\n            paginationNumbers: false,\r\n            responsive: true,\r\n            responsiveRefreshRate: 200,\r\n            responsiveBaseWidth: window,\r\n            baseClass: \"owl-carousel\",\r\n            theme: \"owl-theme\",\r\n            lazyLoad: false,\r\n            lazyFollow: true,\r\n            lazyEffect: \"fade\",\r\n            autoHeight: false,\r\n            jsonPath: false,\r\n            jsonSuccess: false,\r\n            dragBeforeAnimFinish: true,\r\n            mouseDrag: true,\r\n            touchDrag: true,\r\n            addClassActive: false,\r\n            transitionStyle: false,\r\n            beforeUpdate: false,\r\n            afterUpdate: false,\r\n            beforeInit: false,\r\n            afterInit: false,\r\n            beforeMove: false,\r\n            afterMove: false,\r\n            afterAction: false,\r\n            startDragging: false,\r\n            afterLazyLoad: false\r\n        };\r\n    }(jQuery, window, document));\r\n});"}
}});
